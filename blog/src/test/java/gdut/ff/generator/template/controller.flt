package gdut.ff.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.eclipse.jetty.util.StringUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;

import gdut.ff.domain.${className};
import gdut.ff.service.${className}ServiceImpl;
import gdut.ff.utils.NodeUtil;
import gdut.ff.utils.JsonUtil;
import gdut.ff.utils.TokenUtil;

/**
 * 
 * @author liuffei
 * @date 
 */
@RestController
public class ${className}Controller {
	
	@Autowired
	private ${className}ServiceImpl ${beanName}ServiceImpl;
	
	/**
	 * 添加记录
	 * @return
	 * @throws Exception 
	 */
	@PostMapping(value = "/${beanName}")
	public JSONObject insert${className}(@RequestBody ${className} ${beanName},HttpServletRequest request) throws Exception {
		if(StringUtil.isNotBlank(${beanName}.getId())) {
			${beanName}ServiceImpl.update${className}(${beanName});
		}else {
			${beanName}ServiceImpl.insert${className}(${beanName});
		}
		return JsonUtil.successJson();
	}
	
	/**
	 * 查询指定记录
	 * @param id
	 * @return
	 */
	@GetMapping(value = "/${beanName}/{id}")
	public JSONObject find${className}ById(@PathVariable String id, HttpServletRequest request, HttpServletResponse response) {
		${className} ${beanName} = ${beanName}ServiceImpl.find${beanName}ById(id);
		JSOnObject result = JsonUtil.successJson();
		result.put("content", ${beanName});
		return result;
	}
	
	/**
	 * 更新指定的记录
	 * @param id
	 * @return
	 */
	@PutMapping(value = "/${beanName}/{id}")
	public ObjectNode update${className}gById(@PathVariable String id, @RequestBody ${className} ${beanName}) {
		${beanName}ServiceImpl.update${className}(${beanName});
		return JsonUtil.successJson();
	}
	
	/**
	 * 删除记录
	 * @param id
	 * @return
	 */
	@DeleteMapping(value = "/blog/{id}")
	public JSONObject delete${className}ById(@PathVariable String id) {
		${beanName}ServiceImpl.delete${className}ById(id);
		return JsonUtil.successJson();
	}
	
	/**
	 * 查询全部
	 * @param id
	 * @return
	 */
	@GetMapping(value = "/${beanName}s")
	public JSONObject finaAll${className}s() {
		List<${className}> ${beanName}s = ${beanName}ServiceImpl.findAll${className}();
		JSONObject result = JsonUtil.successJson();
		result.put("${beanName}s", ${beanName}s);
		return result;
	}
}
